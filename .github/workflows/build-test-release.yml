name: Build & Release

on:
  workflow_dispatch:
    

jobs:
  build-frontend:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"

    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node 16
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'

    - name: Cache NPM
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      
    - name: Build frontend
      run: |
        npm install -g yarn

        # Build dbnet-parser
        cd .. && rm -rf dbnet-parser
        git clone git@github.com:dbnet-io/dbnet-parser.git
        cd dbnet-parser && yarn && yarn build && cd -
        cd dbnet

        bash scripts/build.frontend.sh

  release-brew:
    timeout-minutes: 20
    runs-on: [self-hosted, macOS, ARM64]
    # runs-on: macos-latest
    needs: [build-frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - uses: actions/download-artifact@v2
        with:
          name: webapp-dist

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.mac.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}

  release-linux:
    runs-on: ubuntu-20.04
    # runs-on: [self-hosted, Linux]
    timeout-minutes: 20
    needs: [build-frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - uses: actions/download-artifact@v2
        with:
          name: webapp-dist

      - name: Run GoReleaser
        # uses: flarco/goreleaser-action@master
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.linux.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
          

  release-windows:
    runs-on: windows-latest
    # runs-on: [self-hosted, Linux]
    timeout-minutes: 20
    needs: [build-frontend]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - uses: actions/download-artifact@v2
        with:
          name: webapp-dist

      - name: Run GoReleaser
        # uses: flarco/goreleaser-action@master
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.windows.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}
          