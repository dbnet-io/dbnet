name: Build & Release

on:
  workflow_dispatch:

jobs:

  release-brew:
    timeout-minutes: 15
    runs-on: [self-hosted, macOS, ARM64]
    # runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.mac.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}

  release-scoop:
    # runs-on: [self-hosted, Windows]
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true

      - name: Run GoReleaser
        # uses: flarco/goreleaser-action@master
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.windows.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}

  release-linux:
    runs-on: ubuntu-18.04
    # runs-on: [self-hosted, Linux]
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"
          cache: true

      - name: Login docker
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u dbnet --password-stdin

      - name: Run GoReleaser
        # uses: flarco/goreleaser-action@master
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-validate -f .goreleaser.linux.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_GITHUB_TOKEN }}