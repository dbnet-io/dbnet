name: Bump

on: 
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  bump:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.tag }}

  build-test:

    # runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[no test]')"
    runs-on: [self-hosted, Linux]
    needs: [bump]

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: "1.20"

    - name: Set up Node 16
      uses: actions/setup-node@v1
      with:
        node-version: '16.x'

    - name: Cache NPM
      id: cache-npm
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      
    - name: Build frontend
      run: |
        npm install -g yarn
        
        # Build dbnet-parser
        cd .. && rm -rf dbnet-parser
        git clone git@github.com:dbnet-io/dbnet-parser.git
        cd dbnet-parser && yarn && yarn build && cd -
        cd dbnet

        bash scripts/build.frontend.sh
    
    - name: Build Backend
      run: |
        go mod edit -dropreplace='github.com/flarco/g' go.mod
        go mod edit -dropreplace='github.com/flarco/dbio' go.mod
        go mod edit -dropreplace='github.com/dbrest-io/dbrest' go.mod
        go mod edit -dropreplace='github.com/slingdata-io/sling-cli' go.mod
        go mod tidy

        go build -o dbnet
    
    - name: Test
      env:
        ENVKEY: ${{ secrets.ENVKEY }}
      run: |
        /__/bin/envkey-source -f --dot-env > .env
        # bash scripts/test.sh